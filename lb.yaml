apiVersion: v1
kind: ConfigMap
metadata:
  name: lb
data:
  haproxy.cfg: |
    global
      log stdout format raw local0
      stats socket /tmp/admin.sock mode 600 level admin
      stats timeout 30s

    defaults
      log global
      mode  http
      option  httplog
      option  dontlognull
      option  redispatch
      timeout connect 5000
      timeout client  500000
      timeout server  500000

    resolvers k8s
      parse-resolv-conf
      hold other 10s
      hold refused 10s
      hold nx 10s
      hold timeout 10s
      hold valid 10s
      hold obsolete 10s

    frontend front-session
      bind 0.0.0.0:8080
      option httplog
      default_backend back-session

    backend back-session
      balance roundrobin

      #option httpchk GET /

      # see: http://cbonte.github.io/haproxy-dconv/2.4/configuration.html#4-server-template
      server-template srv 2 haproxy.channels.svc.cluster.local:8080 check inter 1s resolvers k8s init-addr none
---
apiVersion: v1
kind: Service
metadata:
  name: lb
  labels:
    app: lb
    tier: backend
spec:
  type: NodePort
  ports:
  - name: lb
    port: 8080
    protocol: TCP
    targetPort: 8080
    nodePort: 30030
  selector:
    app: haproxy
    tier: backend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lb
  labels:
    app: lb
    tier: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: lb
      tier: backend
  template:
    metadata:
      labels:
        app: lb
        tier: backend
    spec:
      containers:
      - name: haproxy
        image: "haproxy:2.4.8-alpine"
        ports:
        - containerPort: 8080
        volumeMounts:
          - mountPath: /usr/local/etc/haproxy
            name: lb-config-volume
            readOnly: true
      volumes:
        - configMap:
            name: lb
          name: lb-config-volume
